/*  3.1 Styling a document's look and feel */
/* 3.1.3 Linking CSS styling documents with the link tag */
/*
p {
    background-color: blue;
    color: white;
}
*/
/* 3.2 Selecting content to style with selectors */
/* 3.2.1 Selecting content with ID selectors */

/*p {
 background-color: blue;
 color: white;}*/
p#id-selector-1 {
    background-color: red;
    color: white;
}
p#id-selector-2 {
    background-color: yellow;
    color: black;
}

/* 3.2.2 Selecting content with class selectors */
.class-selector {
    background-color: yellow;
    color: blue;
}

/* 3.2.3 Selecting content based on the document structure */
.selector-1 .selector-3 {
    background-color: red;
    color: white;
}
.selector-2 > .selector-3 > .selector-4 {
    background-color: yellow;
    color: blue;
}

/* 3.3 Styling color */
/* 3.3.1 Styling the foreground color */
.fg-color-black { color: black; }
.fg-color-white { color: white; }
.fg-color-blue { color: #7070ff; }
.fg-color-red { color: #ff7070; }
.fg-color-green { color: green; }

/* 3.3.2 Styling the background color */
.bg-color-yellow {
    background-color: #ffff07;
}
.bg-color-blue {
    background-color: #7070ff;
}
.bg-color-red {
    background-color: #ff7070;
}
.bg-color-green {
    background-color: green;
}

/* 3.4 Styling the box model */
/* 3.4.1 Styling borders */
.border-fat {
    border-width: 20px 30px 20px 30px; }
.border-thin {
    border-width: 4px; }
.border-solid {
    border-style: solid; }
.border-dashed {
    border-style: dashed; }
.border-yellow {
    border-color: #ffff07; }
.border-red {
    border-color: #ff7070; }
.border-blue {
    border-color: #7070ff; }

/* 3.4.2 Styling margins and padding */
.padded-top-left {
    padding-top: 50px;
    padding-left: 50px;
}



.padded-bottom-right {
    padding-bottom: 50px;
    padding-right: 50px;
}

.padding-fat {
    padding: 50px;
}

.margin-bottom {
    margin-bottom: 50px;
}

.margin-right-left {
    margin-left: 50px;
    margin-right: 50px;
}

.margin-all-around {
    margin: 30px;
}

/* 3.4.3 Styling corners */
.rounded-corners-bottom {
    border-bottom-left-radius: 40px;
    border-bottom-right-radius: 40px;
}

.rounded-corners-all-around {
    border-radius: 50px;
}

.rounded-corners-inline {
    border-radius: 30px 0px 20px 50px;
}

/* 3.5 Styling dimensions */
.dimension-portrait {
    width: 75px;
    height: 100px;
}

.dimension-landscape {
    width: 100px;
    height: 75px;
}

.dimension-square {
    width: 75px;
    height: 75px;
}

/* 3.6 Styling position */
/* 3.6.1 Styling relative position */
.pos-relative-nudge-up-right {
    position: relative;
    bottom: 30px;
    left: 30px;
}
.pos-relative-nudge-down-right {
    position: relative;
    top: 20px;
    left: 20px;
}
.pos-relative {
    position: relative;
}

/* 3.6.2 Styling absolute position */
.pos-absolute-10-10 {
    position: absolute;
    top: 10px;
    left: 10px;
}
.pos-absolute-50-50 {
    position: absolute;
    top: 50px;
    left: 50px;
}
.pos-absolute-120-20 {
    position: absolute;
    top: 20px;
    left: 120px;
}

/* 3.6.3 Styling fixed position */
.pos-fixed {
    position: fixed;
    right: 0px;
    bottom: 50%;
}

/* 3.6.4 Styling z-index */
.zindex-bring-to-front {
   z-index: 10;
}

/* 3.6.5 Floating content */
.float-left {
    float: left;
}

.float-right {
    float: right;
    height: 100px;
}

.float-done {
    clear: both;
}

/* 3.6.6 Laying out content in a grid */
.grid-row {
    clear: both;
}

.grid-col-half-page {
    width: 50%;
    float: left;
}
.grid-col-third-page {
    width: 33%;
    float: left;
}

.grid-col-two-thirds-page {
    width: 67%;
    float: left;
}

.grid-col-left-sidebar {
    width: 20%;
    float: left;
}

.grid-col-main-content {
    width: 60%;
    float: left;
}

.grid-col-right-sidebar {
    width: 20%;
    float: left;
}

/* 5 Challenge */
.rotate-paragraph {
    width: 250px;
    height: 250px;
    transform: rotate(90deg);
}

/* 5.1 Rotate a list */
.rotate-list {
    transform: rotate(12deg);
    width: 100px;
    background-color: red;
    color: white;
}

/* 5.2 Rotating a list item */
.rotate-list-items li {
    width: 100px;
    text-align: right;
}
.rotate-list-items li:nth-child(1) {
    transform: rotate(-10deg);
    background-color: yellow;
}
.rotate-list-items li:nth-child(2) {
    transform: rotate(2deg);
    background-color: blue;
    color: white;
}
.rotate-list-items li:nth-child(3) {
    transform: rotate(10deg);
    background-color: red;
}

/* 5.3 Rotating images */
.rotate-image, .rotate-image2 {
    transform: rotate(-10deg);
}

/* 5.4 Rotating a table */
.rotate-table {
    position: relative;
    left: 50px;
    transform: rotate(15deg);}
.rotate-table tr:nth-child(1) {
    background-color: black;
    color: white;}
.rotate-table tr:nth-child(n+2) {
    background-color: yellow;}
.rotate-table tr:nth-child(n+5) {
    background-color: blue;
    color: white;}
.rotate-table tr:nth-child(n+8) {
    background-color: red;}
.rotate-table tr:nth-child(n+11) {
    background-color: green;
    color: white;
}

/* 5.5 Gradients */
.gradients-linear {
    background: linear-gradient(yellow, red);
    width: 200px;
    height: 200px;
}

/* 5.5.1 Radial gradients */
.gradients-radial {
    background: radial-gradient(yellow, green);
    width: 200px;
    height: 200px;
}

/* 5.5.2 Positioning radial gradients */
.gradients-positioned {
    background:
            radial-gradient(
                    at top left, blue, red);
    width: 200px;
    height: 200px;
    color: white;
}
.example {
    background:
            radial-gradient(
                    at top left, green, purple);
    width: 200px;
    height: 200px;
    color: white;
}

/* 5.6 Animations */
/* 5.6.1 Key frame animations */
animation-keyframes {
    position: relative;
    top: 0px;
    animation-duration: 7s;
    animation-name: slidein;
    width: 200px;
    height: 200px;
    background-color: red;
    color: white;
}

@keyframes slidein {
    from {
        position: relative;
        top: 0px;
        font-size: 100%;
        margin-left: 100%;
        width: 200px;
        height: 200px;
        background-color: yellow;
        color: black;
    } /* continued on right */
    50% {
        position: relative;
        top: -200px;
        font-size: 300%;
        margin-left: 25%;
        width: 400px;
        height: 400px;
        background-color: blue;
        color: white;
    }

    to {
        position: relative;
        top: 0px;
        font-size: 100%;
        margin-left: 0%;
        width: 200px;
        height: 200px;
        background-color: red;
        color: white;
    }
}

/* 5.7 Flex */
.flex-container {
    border-width: 5px;
    border-color: black;
    border-style: solid;
}
.flex-box {
    border: 5px gray solid;
    margin: 10px;
    padding: 10px;
}
.flex-box-1 {
    background-color: yellow;
}
.flex-box-2 {
    background-color: blue;
    color: white;
}
.flex-box-3 {
    background-color: red;
    color: white;
}

/* 5.7.1 Aligning flex elements horizontally */
.flex-container1 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
}
.flex-container2 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: center;
}
.flex-container3{
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: end;
}
.flex-container4 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: space-around;
}
.flex-container5 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: space-between;
}

/* 5.7.2 Aligning flex elements vertically */
.flex-container6 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: space-evenly;
    align-items: flex-start;
}
.flex-container7 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}
.flex-container8 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    flex-basis: 100%;
}
.flex-container8 > .flex-box {
    flex-basis: 100%;
}

/* 5.8 Media queries */
@media (min-width: 0px)
and (max-width: 600px) {
    body {
        background-color: yellow;
    }
    .media-query {
        background-color: red;
        color: white;
    }
}
@media (min-width: 600px)
and (max-width: 1200px) {
    body {
        background-color: blue;
        color: white;
    }
    .media-query {
        background-color: yellow;
        color: black;
    }
}
@media (min-width: 0px)
and (max-width: 600px) {
    body {
        background-color: yellow;
    }
    .media-query {
        background-color: red;
        color: white;
    }
}
@media (min-width: 600px)
and (max-width: 1200px) {
    body {
        background-color: blue;
        color: white;
    }
    .media-query {
        background-color: yellow;
        color: black;
    }
}
@media (min-width: 1200px)
and (max-width: 1800px) {
    body {
        background-color: red;
        color: white;
    }
    .media-query {
        background-color: blue;
        color: white;
    }
}
/* Own Examples */
@media (min-width: 1200px)
and (max-width: 1800px) {
    h1{
        color: purple;
    }
    .media-query {
        background-color: blue;
        color: white;
    }
}
@media (min-width: 1200px)
and (max-width: 1800px) {
    .rotate-paragraph{
        color: orange;
    }
    .media-query {
        background-color: blue;
        color: white;
    }
}
@media (min-width: 1200px)
and (max-width: 1800px) {
    h3{
        color: green;
    }
    .media-query {
        background-color: blue;
        color: white;
    }
}